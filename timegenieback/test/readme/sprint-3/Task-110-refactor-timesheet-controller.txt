# timegenieback

How to run:
Using Postman

This goes over some refactoring and authorization:

1. Firstly you need to login to the system, our databases may differ but you need an employee with role: MANAGER
   method: POST
   URL: http://localhost:3000/app/login

   {
       "username": "log1",
       "company_name": "Google",
       "password": "pw1"
   }

   You should receive back a message similar to this:

   {
       "success": true,
       "message": "Welcome back log1",
       "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6ImxvZzEiLCJpYXQiOjE2OTkzNDYwMTksImV4cCI6MTY5OTM0OTYxOX0.xLqlF1lhqLuWCoXzgbkkXATP3ylAI1WEvK_VtRFsUDA"
   }

   Now you will need that token, copy it from YOUR postman.

2. Now you can clock in and out for your employee that you logged in as
   - Before you send the request firstly open the Authorization tab
   - In the Type field select Bearer Token
   - In the box to the right paste you token

   method: Post
   URL: http://localhost:3000/app/timesheet

   {
       "emp_username": "log1",
       "emp_company_name": "Google"
   }

   Now send the request, you should receive back that the employee has been clocked in and the json
   If you send the request again you should receive a message that you are unable to clock in

3. Now to clock out

   method: PATCH
   URL: http://localhost:3000/app/timesheet

   {
       "emp_username": "log1",
       "emp_company_name": "Google"
   }

   Now you can send the request, you should receive back a confirmation of the employee being clocked out
   If you send the message again you should receive that you cant clock out

4. Lastly to get all users clock in and out times do

   method: Get
   URL: http://localhost:3000/app/timesheet
   {
       "emp_username": "log1",
       "emp_company_name": "Google"
   }

   You should receive back all the ids and information of the employees times


   //Trevor basic layout from Coleman S 107 changed to fit needs



